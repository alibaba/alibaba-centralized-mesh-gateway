{{- if not (eq .Values.meshConfig.acmgMesh.mode "OFF") }}
apiVersion: v1
kind: ServiceAccount
  {{- if .Values.global.imagePullSecrets }}
imagePullSecrets:
  {{- range .Values.global.imagePullSecrets }}
  - name: {{ . }}
  {{- end }}
  {{- end }}
metadata:
  name: coreproxy
  namespace: {{ .Release.Namespace }}
  labels:
    app: coreproxy
    release: {{ .Release.Name }}
---
{{- if .Capabilities.KubeVersion.GitVersion | contains "-eks" }}
# not needed long term, just for aws until we fix token request logic
# https://github.com/kubernetes/kubernetes/blob/1e7fa3478ed9de606b761be4f70be4ca60e6e697/plugin/pkg/auth/authorizer/node/node_authorizer.go#L223
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: add-on-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: coreproxy
    namespace: {{ .Release.Namespace }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coreproxy
  namespace: {{ .Release.Namespace }}
  labels:
{{- range $key, $val := .Values.coreproxy.deploymentLabels }}
    {{ $key }}: "{{ $val }}"
{{- end }}
spec:
  selector:
    matchLabels:
      app: coreproxy
      acmg-type: coreproxy
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
        app: coreproxy
        acmg-type: coreproxy
        {{- range $key, $val := .Values.coreproxy.podLabels }}
        {{ $key }}: "{{ $val }}"
        {{- end }}
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 2
      serviceAccountName: coreproxy
      containers:
      - args:
        - proxy
        - coreproxy
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=debug
        - --proxyComponentLogLevel=misc:error
        - --trust-domain=cluster.local
        - --concurrency
        - "2"
        env:
        - name: ISTIO_META_GENERATOR
          value: "coreproxy-envoy"
        - name: ISTIO_META_ACMG_TYPE
          value: "coreproxy"
        - name: ISTIO_META_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: CA_ADDR
          value: istiod.istio-system.svc:15012
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CANONICAL_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-name']
        - name: CANONICAL_REVISION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-revision']
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
            ]
        - name: ISTIO_META_APP_CONTAINERS
          value: proxy
        - name: ISTIO_META_CLUSTER_ID
          value: {{.Cluster}}
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_META_WORKLOAD_NAME
          value: acmg-coreproxy
        - name: ISTIO_META_OWNER
          value: kubernetes://apis/apps/v1/namespaces/default/deployments/proxy
        - name: ISTIO_META_MESH_ID
          value: cluster.local
{{- if contains "/" .Values.coreproxy.image }}
        image: "{{ .Values.coreproxy.image }}"
{{- else }}
        {{/*  TODO(https://github.com/solo-io/istio-sidecarless/issues/281): use distroless, but we are depending on a variant of things not in the distroless image */}}
        image: "{{ .Values.coreproxy.hub | default .Values.global.hub }}/{{ .Values.coreproxy.image | default "proxyv2" }}:{{ .Values.coreproxy.tag | default .Values.global.tag }}"
{{- end }}
        imagePullPolicy: Always
        name: istio-proxy
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020 # TODO: use 15021, but its spammy
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          privileged: true
          runAsGroup: 1337
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/lib/istio/data
          name: istio-data
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /etc/istio/pod
          name: istio-podinfo
      volumes:
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - emptyDir:
          medium: Memory
        name: go-proxy-envoy
      - emptyDir: { }
        name: istio-data
      - emptyDir: { }
        name: go-proxy-data
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.labels
            path: labels
          - fieldRef:
              fieldPath: metadata.annotations
            path: annotations
        name: istio-podinfo
      - name: istio-token
        projected:
          sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
      - configMap:
          name: istio-ca-root-cert
        name: istiod-ca-cert
{{- end }}
