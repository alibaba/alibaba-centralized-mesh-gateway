// Copyright Istio Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package istio.telemetry.workloadmetadata.v1;

option go_package = "istio.io/istio/pkg/workloadmetadata/proto/istio_telemetry_workloadmetadata_v1";

// WorkloadMetadataResources contains a list of workloads and their metadata for
// an Ambient L4 proxy (aka per-Kubernetes-node proxy). This will be sent in
// an xDS response message via ECDS.
message WorkloadMetadataResources {
  // Provides the xDS node identifier for the ASM proxy that corresponds to the
  // `workload_resources` returned in a response.
  string proxy_id = 1;

  // Contains a set of workload metadata for all workload instances that
  // are currently being proxied by the xDS node.
  repeated WorkloadMetadataResource workload_metadata_resources = 2;
}

// Contains the metadata for a single workload instance.
message WorkloadMetadataResource {

  // Set of IP addresses associated with an individual workload instance.
  repeated string ip_addresses = 1;

  // The full name of the workload instance.
  string instance_name = 2;

  // The Kubernetes namespace to which the workload instance belongs.
  string namespace_name = 3;

  // The set of containers (if known) that constitute the workload instance.
  repeated string containers = 4;

  // The name of the workload provided by the instance. This is typically the
  // Kubernetes deployment name.
  string workload_name = 5;

  enum WorkloadType {
    KUBERNETES_DEPLOYMENT = 0;
    KUBERNETES_CRONJOB = 1;
    KUBERNETES_POD = 2;
    KUBERNETES_JOB = 3;
  }

  // Type of workload
  WorkloadType workload_type = 6;

  // Canonical name of the workload
  string canonical_name = 7;

  // Canonical revision of the workload
  string canonical_revision = 8;
}
